[versions]
agp = "8.13.0"
appcompat = "1.7.0"
fragment = "1.8.6"
preference = "1.2.1"
browser = "1.8.0"
swagger-parser = "2.1.34"
webkit = "1.13.0"
lifecycle-viewmodel = "2.8.7"
kotlinx-serialization-json = "1.8.0"
paging = "3.3.6"
navigation = "2.8.9"
room = "2.6.1"
rxandroid = "3.0.2"
calendar = "2.6.2"
material = "1.13.0-alpha12"
flexbox = "3.0.0"
volley = "1.2.1"
glide = "4.16.0"
conscrypt = "2.5.3"
websocket-client = "2.0.2"
gson = "2.12.1"
fuzzywuzzy = "1.4.0"
work = "2.10.0"
#noinspection GradleDependency
zxing-core = "3.3.0"
zxing-android-embedded = "4.3.0"
desugar = "2.1.5"
exifinterface = "1.4.0"
gemini = "1.20.0"
markwon = "4.6.2"

[libraries]
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
fragment = { group = "androidx.fragment", name = "fragment", version.ref = "fragment" }
preference = { group = "androidx.preference", name = "preference", version.ref = "preference" }
browser = { module = "androidx.browser:browser", version.ref = "browser" }
swagger-parser = { module = "io.swagger.parser.v3:swagger-parser", version.ref = "swagger-parser" }
webkit = { module = "androidx.webkit:webkit", version.ref = "webkit" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle-viewmodel" }
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle-viewmodel" }
paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
# Prevents compilation error at graph.setStartDestination: class file for kotlinx.serialization.KSerializer not found
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
# Navigation framework for easy navigation control using XML
navigation-fragment = { group = "androidx.navigation", name = "navigation-fragment", version.ref = "navigation" }
navigation-ui = { group = "androidx.navigation", name = "navigation-ui", version.ref = "navigation" }
# Android Room for database and RxJava for Async access of database
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-rxjava3 = { module = "androidx.room:room-rxjava3", version.ref = "room" }
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxandroid" }
# Material views
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
calendar = { module = "com.kizitonwose.calendar:view", version.ref = "calendar" }
flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
# Volley for all general network requests and Glide for image loading
volley = { module = "com.android.volley:volley", version.ref = "volley" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
# Conscrypt for new TLS support on old Android devices
conscrypt = { module = "org.conscrypt:conscrypt-android", version.ref = "conscrypt" }
websocket-client = { module = "dev.gustavoavila:java-android-websocket-client", version.ref = "websocket-client" }
# GSON for converting JSON responses to Java objects
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
# FuzzyWuzzy for fuzzy search in product names and autocompletion
fuzzywuzzy = { module = "me.xdrop:fuzzywuzzy", version.ref = "fuzzywuzzy" }
# Work for daily notifications
work-runtime = { module = "androidx.work:work-runtime", version.ref = "work" }
# ZXing for barcode scanning
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing-core" }
zxing-android-embedded = { module = "com.journeyapps:zxing-android-embedded", version.ref = "zxing-android-embedded" }
# https://github.com/journeyapps/zxing-android-embedded#option-2-desugaring-advanced
# prevents bug https://github.com/patzly/grocy-android/issues/425
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "exifinterface" }
# Google Gemini AI SDK for chat integration
gemini = { module = "com.google.genai:google-genai", version.ref = "gemini" }
# Markwon for rendering Markdown in TextViews
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-linkify = { module = "io.noties.markwon:linkify", version.ref = "markwon" }
markwon-ext-tables = { module = "io.noties.markwon:ext-tables", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
navigation-safeargs = { id = "androidx.navigation.safeargs", version.ref = "navigation" }