{"systemInstruction":{"parts":[{"text":"You are embedded into an Android app called 'Grocy' that helps users manage their groceries. You have access to the user's grocery list and can provide information about items, recipes, and shopping tips. Be friendly and helpful, and always refer to the app's features when relevant.ALWAYS Respond in the user's language, which is <LANG_CODE>, unless he/she states otherwise. Answer concise and to the point, avoid giving long and detailed answers unless the user states otherwise. Use the google_search function to lookup (nutrition and health) facts and recipes. Also answer compound questions by invoking the corresponding functions. E.g. you can answer a request like 'Search the internet for recipes I can make with the ingredients I have in stock' by invoking get_stock function and then using the google_search function. Always assume that the user wants to query information from the Grocy instance first, before using the google_search function or giving general information. Try to format your answer in Markdown. Function call information: Make sure to always include the corresponding unit for quantities, e.g., '2 pieces of bread' or '1.5 kg of apples'. Functions like get_stock only return an 'amount' without the unit, but you can retrieve the actual unit by looking at the 'product'.'qu_id_stock' and then querying the existing units to match the id using 'get_objects_entity' and setting the entity to quantity_units.\nWhen displaying dates, use the format that is appropriate for the user's locale, e.g., 'DD.MM.YYYY' for German or 'MM/DD/YYYY' for US English. The same holds true for floating point values, e.g. if the function call returns a value of 1.5 then this would be displayed as 1,5 if the locale is German.\nDates in the JSON requests and responses for function calls are always in the format YYYY-MM-DD or YYYY-MM-DD HH:MM:SS.\n\n# System Instruction for Google Gemini - Grocy API Integration\n\nYou are an AI assistant integrated with Grocy, a self-hosted groceries & household management system. You have access to Grocy's REST API and Google Search capabilities to help users manage their inventory, recipes, chores, and household tasks.\n\n## Core Principles\n\n1. **Chain API Calls Intelligently**: When users ask questions using human-readable names (products, locations, etc.), you must:\n   - First search for the entity by name to get its ID\n   - Then use that ID in subsequent API calls\n   - Never ask users for IDs when you can look them up yourself\n\n2. **Be Proactive**: Develop multi-step workflows automatically without asking the user for intermediate information like IDs.\n\n3. **Combine Internal and External Data**: Use Google Search for recipes, nutritional information, and general food facts, then integrate this with the user's Grocy inventory.\n## Common Workflow Patterns\n\n### Pattern 1: Finding Entities by Name\n\nWhen a user refers to something by name (product, location, chore, etc.), use the query parameter to search:\n\n**Example: \"What barcode is associated with my cookies?\"**\n\n❌ **Wrong Approach**: Ask \"What is the product ID for cookies?\"\n\n✅ **Correct Workflow**:\n```\nStep 1: Search for product by name\nGET /objects/products?query[]=name~cookies\n\nResponse: [{\"id\": 1, \"name\": \"Cookies\", ...}]\n\nStep 2: Get barcodes for that product\nGET /objects/product_barcodes?query[]=product_id=1\n\nResponse: [{\"barcode\": \"01321230213\", \"product_id\": 1, ...}]\n\nStep 3: Answer user\n\"Your cookies are associated with barcode 01321230213\"\n```\n\n### Pattern 2: Complex Queries with Filtering\n\nUse the query parameter with various operators:\n\n**Operators**:\n- `=` equal\n- `!=` not equal\n- `~` LIKE (partial match)\n- `!~` not LIKE\n- `<`, `>`, `<=`, `>=` comparison\n- `§` regular expression\n\n**Example: \"Show me all products with less than 5 items in stock\"**\n\n```\nStep 1: Get current stock levels\nGET /stock\n\nStep 2: Filter products with amount < 5\n(Filter the response data)\n\nStep 3: Present results in a user-friendly format\n```\n\n### Pattern 3: Multi-Entity Lookups\n\n**Example: \"How much milk do I have in the fridge?\"**\n\n```\nStep 1: Find the product \"milk\"\nGET /objects/products?query[]=name~milk\n\nStep 2: Find the location \"fridge\"\nGET /objects/locations?query[]=name~fridge\n\nStep 3: Get stock details for that product\nGET /stock/products/{milk_product_id}/locations\n\nStep 4: Filter for the fridge location and report amount\n```\n\n### Pattern 4: Combining Grocy Data with External Search\n\n**Example: \"Can I make chocolate chip cookies with what I have?\"**\n\n```\nStep 1: Search Google for chocolate chip cookie recipe\n(Use web search to get ingredient list)\n\nStep 2: For each ingredient, check Grocy inventory\nGET /objects/products?query[]=name~flour\nGET /stock/products/{flour_id}\n(Repeat for sugar, eggs, chocolate chips, etc.)\n\nStep 3: Compare required vs available quantities\n\nStep 4: Present results:\n\"You have enough flour and sugar, but you're missing chocolate chips. \nYou have 2 eggs but the recipe needs 3.\"\n```\n\n### Pattern 5: Stock Operations\n\n**Adding Stock**:\n```\nPOST /stock/products/{productId}/add\n{\n  \"amount\": 2,\n  \"best_before_date\": \"2024-12-31\",\n  \"transaction_type\": \"purchase\",\n  \"price\": 3.99\n}\n```\n\n**Consuming Stock**:\n```\nPOST /stock/products/{productId}/consume\n{\n  \"amount\": 1,\n  \"transaction_type\": \"consume\",\n  \"spoiled\": false\n}\n```\n\n---\n\n## Key Entities and Their Relationships\n\n### Products\n- Products have IDs, names, locations, quantity units\n- Products link to barcodes via `product_barcodes`\n- Use `/objects/products` to search and `/stock/products/{id}` for stock details\n\n### Quantity Units\n- Products have purchase units (`qu_id_purchase`) and stock units (`qu_id_stock`)\n- Use `/objects/quantity_units` to get unit names from IDs\n- Example: Convert \"Pack\" to ID before creating products\n\n### Locations\n- Stock entries have `location_id`\n- Use `/objects/locations` to search by name\n- Use `/stock/products/{id}/locations` to see where a product is stored\n\n### Barcodes\n- Use `/stock/products/by-barcode/{barcode}/*` endpoints to work with products by scanning\n- Link barcodes to products via `/objects/product_barcodes`\n\n---\n\n## Practical Examples\n\n### Example 1: Complete Product Lookup\n\n**User**: \"Tell me about my orange juice\"\n\n```\nStep 1: Find product\nGET /objects/products?query[]=name~orange juice\n\nResponse: {\"id\": 15, \"name\": \"Orange Juice\", \"location_id\": 2, ...}\n\nStep 2: Get detailed stock info\nGET /stock/products/15\n\nResponse: {\n  \"product\": {...},\n  \"stock_amount\": 1.5,\n  \"next_due_date\": \"2025-11-01\",\n  \"last_price\": 4.99,\n  ...\n}\n\nStep 3: Get location name\nGET /objects/locations/2\n\nResponse: {\"id\": 2, \"name\": \"Fridge\"}\n\nStep 4: Answer comprehensively\n\"You have 1.5 liters of Orange Juice in the Fridge. \nIt expires on November 1st, 2025. Last purchase price was $4.99.\"\n```\n\n### Example 2: Shopping List Management\n\n**User**: \"Add 3 bags of coffee to my shopping list\"\n\n```\nStep 1: Find coffee product\nGET /objects/products?query[]=name~coffee\n\nResponse: {\"id\": 8, \"name\": \"Coffee Beans\", ...}\n\nStep 2: Add to shopping list\nPOST /stock/shoppinglist/add-product\n{\n  \"product_id\": 8,\n  \"product_amount\": 3\n}\n\nStep 3: Confirm\n\"I've added 3 bags of Coffee Beans to your shopping list.\"\n```\n\n### Example 3: Recipe Planning with External Search\n\n**User**: \"Find a recipe for pasta carbonara and check if I have the ingredients\"\n\n```\nStep 1: Search Google for recipe\nSearch: \"pasta carbonara recipe ingredients\"\n\nResult: eggs, pasta, bacon, parmesan, black pepper\n\nStep 2: Check each ingredient in Grocy\nGET /objects/products?query[]=name~eggs\nGET /stock/products/{eggs_id}\n\nGET /objects/products?query[]=name~pasta\nGET /stock/products/{pasta_id}\n\n(etc. for all ingredients)\n\nStep 3: Compile results\n\"Here's a pasta carbonara recipe. You have:\n✓ Eggs (4 available, need 3)\n✓ Pasta (500g available, need 400g)\n✗ Bacon (none in stock)\n✓ Parmesan (150g available, need 50g)\n✓ Black pepper\n\nYou need to buy bacon to make this recipe.\"\n```\n\n### Example 4: Expiration Management\n\n**User**: \"What's expiring soon?\"\n\n```\nStep 1: Get volatile stock info\nGET /stock/volatile?due_soon_days=7\n\nResponse: {\n  \"due_products\": [...],\n  \"overdue_products\": [...],\n  \"expired_products\": [...]\n}\n\nStep 2: Format user-friendly response\n\"Items expiring in the next 7 days:\n- Milk (expires Oct 8)\n- Yogurt (expires Oct 10)\n- Lettuce (expires Oct 9)\n\nOverdue items:\n- Chicken breast (expired Oct 2)\n\nWould you like me to add any of these to your meal plan or mark them as spoiled?\"\n```\n\n### Example 5: Barcode Scanning\n\n**User**: \"I scanned barcode 1234567890, what is it?\"\n\n```\nStep 1: Lookup product by barcode\nGET /stock/products/by-barcode/1234567890\n\nResponse: {\n  \"product\": {\"id\": 25, \"name\": \"Peanut Butter\", ...},\n  \"stock_amount\": 2,\n  ...\n}\n\nStep 2: Answer\n\"That's Peanut Butter. You currently have 2 jars in stock.\"\n```\n\n---\n\n## Query Construction Examples\n\n### Exact Match\n```\nGET /objects/products?query[]=name=Milk\n```\n\n### Partial Match (Case-Insensitive LIKE)\n```\nGET /objects/products?query[]=name~milk\n```\n\n### Multiple Conditions\n```\nGET /objects/products?query[]=name~chocolate&query[]=min_stock_amount>0\n```\n\n### Ordering and Limiting\n```\nGET /objects/products?order=name:asc&limit=10\n```\n\n### Complex Filtering\n```\nGET /stock?query[]=amount<5&order=best_before_date:asc\n```\n\n---\n\n## Error Handling\n\nWhen an entity is not found:\n- Don't just report \"not found\"\n- Suggest alternatives: \"I couldn't find 'coffe' in your inventory. Did you mean 'Coffee Beans'?\"\n- Offer to create it: \"I don't see milk in your products. Would you like me to add it?\"\n\n---\n\n## Best Practices\n\n1. **Always chain lookups**: Name → ID → Details\n2. **Cache IDs during conversation**: If you looked up \"milk\" (id: 5), remember it for the session\n3. **Use batch operations**: Get multiple products at once when possible\n4. **Enrich data**: Combine stock info with nutritional data from Google\n5. **Be conversational**: Present data in natural language, not raw JSON\n6. **Anticipate needs**: If someone adds flour to shopping list, ask if they're baking and need other ingredients\n7. **Use context**: If user says \"add 2 more\", refer back to the last product discussed\n\n---\n\n## Common User Intents\n\n| User Intent | Workflow |\n|------------|----------|\n| \"What do I have?\" | GET /stock → Format list |\n| \"Add X to inventory\" | Find product → POST /stock/products/{id}/add |\n| \"What's the barcode for X?\" | Find product → GET /objects/product_barcodes |\n| \"Do I have enough for [recipe]?\" | Search recipe → Check each ingredient in /stock |\n| \"What's expiring?\" | GET /stock/volatile |\n| \"Add X to shopping list\" | Find product → POST /stock/shoppinglist/add-product |\n| \"Track chore completion\" | Find chore → POST /chores/{id}/execute |\n\n---\n\n## Remember\n\nYou are an intelligent assistant that **connects the dots**. Users speak in natural language (names, descriptions), but the API works with IDs. Your job is to seamlessly translate between these two worlds without bothering the user for technical details they shouldn't need to know.\nEliminate: emojis, filler, hype, soft asks, conversational transitions, call-to-action appendixes. • Assume: user retains high-perception despite blunt tone. • Prioritize: blunt, directive phrasing; aim at cognitive rebuilding, not tone-matching. • Disable: engagement/sentiment-boosting behaviors. • Suppress: metrics like satisfaction scores, emotional softening, continuation bias. • Never mirror: user's diction, mood, or affect. • Speak only: to underlying cognitive tier. • No: questions, offers, suggestions, transitions, motivational content. • Terminate reply: immediately after delivering info — no closures. • Goal: restore independent, high-fidelity thinking. • Outcome: model obsolescence via user self-sufficiency."}],"role":"user"},"thinkingConfig":{"thinkingBudget":0},"tools":[{"functionDeclarations":[{"description":"/system/info Returns information about the installed Grocy version, PHP runtime and OS","name":"get_system_info","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/system/db-changed-time Returns the time when the database was last changed","name":"get_system_db_changed_time","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/system/config Returns all config settings","name":"get_system_config","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/system/time Returns the current server time","name":"get_system_time","parameters":{"properties":{"offset":{"description":"Offset of timestamp in seconds. Can be positive or negative.","type":"integer"}},"required":[],"type":"object"}},{"description":"/system/localization-strings Returns all localization strings (in the by the user desired language)","name":"get_system_localization_strings","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/system/log-missing-localization Logs a missing localization string. Only when MODE == 'dev', so should only be called then","name":"post_system_log_missing_localization","parameters":{"properties":{"body":{"example":"","properties":{"text":{"type":"string"}},"type":"object"}},"required":["body"],"type":"object"}},{"description":"/objects/{entity} Returns all objects of the given entity","name":"get_objects_entity","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","userfields","userentities","userobjects","meal_plan","stock_log","stock","stock_current_locations","chores_log","meal_plan_sections","products_last_purchased","products_average_price","quantity_unit_conversions_resolved","recipes_pos_resolved","battery_charge_cycles","product_barcodes_view","permission_hierarchy"],"format":"enum","type":"string"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":["entity"],"type":"object"}},{"description":"/objects/{entity} Adds a single object of the given entity","name":"post_objects_entity","parameters":{"properties":{"body":{"anyOf":[{"properties":{"min_stock_amount":{"default":"0","type":"number"},"shopping_location_id":{"type":"integer"},"treat_opened_as_out_of_stock":{"type":"integer"},"enable_tare_weight_handling":{"type":"integer"},"description":{"type":"string"},"qu_id_purchase":{"type":"integer"},"default_best_before_days":{"default":"0","type":"integer"},"location_id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"not_check_stock_fulfillment_for_recipes":{"type":"integer"},"product_group_id":{"type":"integer"},"tare_weight":{"type":"number"},"picture_file_name":{"type":"string"},"move_on_open":{"type":"integer"},"no_own_stock":{"type":"integer"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"auto_reprint_stock_label":{"type":"integer"},"qu_id_stock":{"type":"integer"},"should_not_be_frozen":{"type":"integer"},"name":{"type":"string"},"id":{"type":"integer"},"default_best_before_days_after_open":{"default":"0","type":"integer"},"default_consume_location_id":{"type":"integer"}},"type":"object"},{"properties":{"track_date_only":{"type":"boolean"},"rescheduled_date":{"format":"date-time","type":"string"},"rescheduled_next_execution_assigned_to_user_id":{"type":"integer"},"assignment_config":{"type":"string"},"description":{"type":"string"},"period_days":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"period_config":{"type":"string"},"next_execution_assigned_to_user_id":{"type":"integer"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"assignment_type":{"enum":["no-assignment","who-least-did-first","random","in-alphabetical-order"],"format":"enum","type":"string"},"name":{"type":"string"},"rollover":{"type":"boolean"},"id":{"type":"integer"},"period_type":{"enum":["manually","hourly","daily","weekly","monthly"],"format":"enum","type":"string"},"start_date":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"used_in":{"type":"string"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"integer"},"charge_interval_days":{"default":"0","type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"name_plural":{"type":"string"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"plural_forms":{"type":"string"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"default":"0","description":"The manual entered amount","type":"number"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"product_id":{"type":"integer"},"shopping_list_id":{"type":"integer"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"type":"number"},"shopping_location_id":{"type":"integer"},"opened_date":{"format":"date","type":"string"},"stock_id":{"description":"A unique id which references this stock entry during its lifetime","type":"string"},"location_id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"purchased_date":{"format":"date","type":"string"},"price":{"type":"number"},"product_id":{"type":"integer"},"best_before_date":{"format":"date","type":"string"},"id":{"type":"integer"},"open":{"type":"integer"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"type":"number"},"product_id":{"type":"integer"},"shopping_location_id":{"type":"integer"},"qu_id":{"type":"integer"},"barcode":{"type":"string"},"last_price":{"type":"number"}},"type":"object"}],"description":"Request body (one of the possible schemas)","example":"","type":"object"},"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","userfields","userentities","userobjects","meal_plan","meal_plan_sections"],"format":"enum","type":"string"}},"required":["entity","body"],"type":"object"}},{"description":"/objects/{entity}/{objectId} Returns a single object of the given entity","name":"get_objects_entity_objectId","parameters":{"properties":{"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","userfields","userentities","userobjects","meal_plan","stock_log","stock","stock_current_locations","chores_log","meal_plan_sections","products_last_purchased","products_average_price","quantity_unit_conversions_resolved","recipes_pos_resolved","battery_charge_cycles","product_barcodes_view","permission_hierarchy"],"format":"enum","type":"string"},"objectId":{"description":"A valid object id of the given entity","type":"integer"}},"required":["entity","objectId"],"type":"object"}},{"description":"/objects/{entity}/{objectId} Edits the given object of the given entity","name":"put_objects_entity_objectId","parameters":{"properties":{"body":{"anyOf":[{"properties":{"min_stock_amount":{"default":"0","type":"number"},"shopping_location_id":{"type":"integer"},"treat_opened_as_out_of_stock":{"type":"integer"},"enable_tare_weight_handling":{"type":"integer"},"description":{"type":"string"},"qu_id_purchase":{"type":"integer"},"default_best_before_days":{"default":"0","type":"integer"},"location_id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"not_check_stock_fulfillment_for_recipes":{"type":"integer"},"product_group_id":{"type":"integer"},"tare_weight":{"type":"number"},"picture_file_name":{"type":"string"},"move_on_open":{"type":"integer"},"no_own_stock":{"type":"integer"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"auto_reprint_stock_label":{"type":"integer"},"qu_id_stock":{"type":"integer"},"should_not_be_frozen":{"type":"integer"},"name":{"type":"string"},"id":{"type":"integer"},"default_best_before_days_after_open":{"default":"0","type":"integer"},"default_consume_location_id":{"type":"integer"}},"type":"object"},{"properties":{"track_date_only":{"type":"boolean"},"rescheduled_date":{"format":"date-time","type":"string"},"rescheduled_next_execution_assigned_to_user_id":{"type":"integer"},"assignment_config":{"type":"string"},"description":{"type":"string"},"period_days":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"period_config":{"type":"string"},"next_execution_assigned_to_user_id":{"type":"integer"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"assignment_type":{"enum":["no-assignment","who-least-did-first","random","in-alphabetical-order"],"format":"enum","type":"string"},"name":{"type":"string"},"rollover":{"type":"boolean"},"id":{"type":"integer"},"period_type":{"enum":["manually","hourly","daily","weekly","monthly"],"format":"enum","type":"string"},"start_date":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"used_in":{"type":"string"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"integer"},"charge_interval_days":{"default":"0","type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"name_plural":{"type":"string"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"name":{"type":"string"},"description":{"type":"string"},"plural_forms":{"type":"string"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"default":"0","description":"The manual entered amount","type":"number"},"userfields":{"description":"Key/value pairs of userfields","type":"object"},"product_id":{"type":"integer"},"shopping_list_id":{"type":"integer"},"id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"type":"number"},"shopping_location_id":{"type":"integer"},"opened_date":{"format":"date","type":"string"},"stock_id":{"description":"A unique id which references this stock entry during its lifetime","type":"string"},"location_id":{"type":"integer"},"row_created_timestamp":{"format":"date-time","type":"string"},"purchased_date":{"format":"date","type":"string"},"price":{"type":"number"},"product_id":{"type":"integer"},"best_before_date":{"format":"date","type":"string"},"id":{"type":"integer"},"open":{"type":"integer"}},"type":"object"},{"properties":{"note":{"type":"string"},"amount":{"type":"number"},"product_id":{"type":"integer"},"shopping_location_id":{"type":"integer"},"qu_id":{"type":"integer"},"barcode":{"type":"string"},"last_price":{"type":"number"}},"type":"object"}],"description":"Request body (one of the possible schemas)","example":"","type":"object"},"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","userfields","userentities","userobjects","meal_plan","meal_plan_sections"],"format":"enum","type":"string"},"objectId":{"description":"A valid object id of the given entity","type":"integer"}},"required":["entity","objectId","body"],"type":"object"}},{"description":"/objects/{entity}/{objectId} Deletes a single object of the given entity","name":"delete_objects_entity_objectId","parameters":{"properties":{"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","api_keys","userfields","userentities","userobjects","meal_plan","meal_plan_sections"],"format":"enum","type":"string"},"objectId":{"description":"A valid object id of the given entity","type":"integer"}},"required":["entity","objectId"],"type":"object"}},{"description":"/userfields/{entity}/{objectId} Returns all userfields with their values of the given object of the given entity","name":"get_userfields_entity_objectId","parameters":{"properties":{"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","api_keys","userfields","userentities","userobjects","meal_plan","stock_log","stock","stock_current_locations","chores_log","meal_plan_sections","products_last_purchased","products_average_price","quantity_unit_conversions_resolved","recipes_pos_resolved","battery_charge_cycles","product_barcodes_view","permission_hierarchy"],"format":"enum","type":"string"},"objectId":{"description":"A valid object id of the given entity","type":"string"}},"required":["entity","objectId"],"type":"object"}},{"description":"/userfields/{entity}/{objectId} Edits the given userfields of the given object of the given entity","name":"put_userfields_entity_objectId","parameters":{"properties":{"body":{"description":"Key/value pairs of userfields","example":"","type":"object"},"entity":{"description":"A valid entity name","enum":["products","chores","product_barcodes","batteries","locations","quantity_units","quantity_unit_conversions","shopping_list","shopping_lists","shopping_locations","recipes","recipes_pos","recipes_nestings","tasks","task_categories","product_groups","equipment","userfields","userentities","userobjects","meal_plan","meal_plan_sections"],"format":"enum","type":"string"},"objectId":{"description":"A valid object id of the given entity","type":"string"}},"required":["entity","objectId","body"],"type":"object"}},{"description":"/files/{group}/{fileName} Serves the given file. With proper Content-Type header","name":"get_files_group_fileName","parameters":{"properties":{"fileName":{"description":"The file name (including extension)<br>**BASE64 encoded**","type":"string"},"best_fit_width":{"description":"Only when using `force_serve_as` = `picture`: Downscale the picture to the given width while maintaining the aspect ratio","type":"number"},"force_serve_as":{"description":"Force the file to be served as the given type","enum":["picture"],"format":"enum","type":"string"},"best_fit_height":{"description":"Only when using `force_serve_as` = `picture`: Downscale the picture to the given height while maintaining the aspect ratio","type":"number"},"group":{"description":"The file group","enum":["equipmentmanuals","recipepictures","productpictures","userfiles","userpictures"],"format":"enum","type":"string"}},"required":["group","fileName"],"type":"object"}},{"description":"/files/{group}/{fileName} Uploads a single file. The file will be stored at /data/storage/{group}/{file_name} (you need to remember the group and file name to get or delete it again)","name":"put_files_group_fileName","parameters":{"properties":{"fileName":{"description":"The file name (including extension)<br>**BASE64 encoded**","type":"string"},"group":{"description":"The file group","enum":["equipmentmanuals","recipepictures","productpictures","userfiles","userpictures"],"format":"enum","type":"string"}},"required":["group","fileName"],"type":"object"}},{"description":"/files/{group}/{fileName} Deletes the given file","name":"delete_files_group_fileName","parameters":{"properties":{"fileName":{"description":"The file name (including extension)<br>**BASE64 encoded**","type":"string"},"group":{"description":"The file group","enum":["equipmentmanuals","recipepictures","productpictures","userfiles","userpictures"],"format":"enum","type":"string"}},"required":["group","fileName"],"type":"object"}},{"description":"/users Returns all users","name":"get_users","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":[],"type":"object"}},{"description":"/users Creates a new user","name":"post_users","parameters":{"properties":{"body":{"example":"","properties":{"password":{"type":"string"},"picture_file_name":{"type":"string"},"last_name":{"type":"string"},"id":{"type":"integer"},"first_name":{"type":"string"},"row_created_timestamp":{"format":"date-time","type":"string"},"username":{"type":"string"}},"type":"object"}},"required":["body"],"type":"object"}},{"description":"/users/{userId} Edits the given user","name":"put_users_userId","parameters":{"properties":{"body":{"example":"","properties":{"password":{"type":"string"},"picture_file_name":{"type":"string"},"last_name":{"type":"string"},"id":{"type":"integer"},"first_name":{"type":"string"},"row_created_timestamp":{"format":"date-time","type":"string"},"username":{"type":"string"}},"type":"object"},"userId":{"description":"A valid user id","type":"integer"}},"required":["userId","body"],"type":"object"}},{"description":"/users/{userId} Deletes the given user","name":"delete_users_userId","parameters":{"properties":{"userId":{"description":"A valid user id","type":"integer"}},"required":["userId"],"type":"object"}},{"description":"/users/{userId}/permissions Returns the assigned permissions of the given user. See \"GET /objects/permission_hierarchy\" for a permission name / id mapping","name":"get_users_userId_permissions","parameters":{"properties":{"userId":{"description":"A valid user id","type":"integer"}},"required":["userId"],"type":"object"}},{"description":"/users/{userId}/permissions Adds a permission to the given user. See \"GET /objects/permission_hierarchy\" for a permission name / id mapping","name":"post_users_userId_permissions","parameters":{"properties":{"body":{"example":"","properties":{"permissions_id":{"description":"A permission ids","type":"integer"}},"type":"object"},"userId":{"description":"A valid user id","type":"integer"}},"required":["userId","body"],"type":"object"}},{"description":"/users/{userId}/permissions Replaces the assigned permissions of the given user. See \"GET /objects/permission_hierarchy\" for a permission name / id mapping","name":"put_users_userId_permissions","parameters":{"properties":{"body":{"example":"","properties":{"permissions":{"description":"A list of permission ids","items":{"type":"integer"},"type":"array"}},"type":"object"},"userId":{"description":"A valid user id","type":"integer"}},"required":["userId","body"],"type":"object"}},{"description":"/user Returns the currently authenticated user","name":"get_user","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/user/settings Returns all settings of the currently logged in user","name":"get_user_settings","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/user/settings/{settingKey} Returns the given setting of the currently logged in user","name":"get_user_settings_settingKey","parameters":{"properties":{"settingKey":{"description":"The key of the user setting","type":"string"}},"required":["settingKey"],"type":"object"}},{"description":"/user/settings/{settingKey} Sets the given setting of the currently logged in user","name":"put_user_settings_settingKey","parameters":{"properties":{"settingKey":{"description":"The key of the user setting","type":"string"},"body":{"example":"","properties":{"value":{"type":"string"}},"type":"object"}},"required":["settingKey","body"],"type":"object"}},{"description":"/user/settings/{settingKey} Deletes the given setting of the currently logged in user","name":"delete_user_settings_settingKey","parameters":{"properties":{"settingKey":{"description":"The key of the user setting","type":"string"}},"required":["settingKey"],"type":"object"}},{"description":"/stock Returns all products which are currently in stock incl. the next due date per product","name":"get_stock","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/stock/entry/{entryId} Returns details of the given stock","name":"get_stock_entry_entryId","parameters":{"properties":{"entryId":{"description":"A valid stock entry id","type":"integer"}},"required":["entryId"],"type":"object"}},{"description":"/stock/entry/{entryId} Edits the stock entry","name":"put_stock_entry_entryId","parameters":{"properties":{"body":{"example":{"id":2,"amount":1,"best_before_date":"2021-07-19","purchased_date":"2020-01-01","price":22.03,"open":false,"location_id":4},"properties":{"amount":{"description":"The amount to add - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"price":{"description":"The price per stock quantity unit in configured currency","type":"number"},"shopping_location_id":{"description":"If omitted, no store will be affected","type":"integer"},"best_before_date":{"description":"The due date of the product to add, when omitted, the current date is used","format":"date","type":"string"},"open":{"description":"If the stock entry was already opened or not","type":"boolean"},"location_id":{"description":"If omitted, the default location of the product is used","type":"integer"},"purchased_date":{"description":"The date when this stock entry was purchased","format":"date","type":"string"}},"type":"object"},"entryId":{"description":"A valid stock entry id","type":"integer"}},"required":["entryId","body"],"type":"object"}},{"description":"/stock/entry/{entryId}/printlabel Prints the Grocycode / stock entry label of the given entry on the configured label printer","name":"get_stock_entry_entryId_printlabel","parameters":{"properties":{"entryId":{"description":"A valid stock entry id","type":"integer"}},"required":["entryId"],"type":"object"}},{"description":"/stock/volatile Returns all products which are due soon, overdue, expired or currently missing","name":"get_stock_volatile","parameters":{"properties":{"due_soon_days":{"default":"5","description":"The number of days in which products are considered to be due soon","type":"integer"}},"required":[],"type":"object"}},{"description":"/stock/products/{productId} Returns details of the given product","name":"get_stock_products_productId","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"}},"required":["productId"],"type":"object"}},{"description":"/stock/products/{productId}/locations Returns all locations where the given product currently has stock","name":"get_stock_products_productId_locations","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"offset":{"description":"The number of objects to skip","type":"integer"},"include_sub_products":{"description":"If sub product locations should be included (if the given product is a parent product and in addition to the ones of the given product)","type":"boolean"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":["productId"],"type":"object"}},{"description":"/stock/products/{productId}/entries Returns all stock entries of the given product in order of next use (Opened first, then first due first, then first in first out)","name":"get_stock_products_productId_entries","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"offset":{"description":"The number of objects to skip","type":"integer"},"include_sub_products":{"description":"If sub products should be included (if the given product is a parent product and in addition to the ones of the given product)","type":"boolean"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":["productId"],"type":"object"}},{"description":"/stock/products/{productId}/price-history Returns the price history of the given product","name":"get_stock_products_productId_price_history","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"}},"required":["productId"],"type":"object"}},{"description":"/stock/products/{productId}/add Adds the given amount of the given product to stock","name":"post_stock_products_productId_add","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"body":{"example":{"amount":1,"best_before_date":"2019-01-19","transaction_type":"purchase","price":1.99},"properties":{"note":{"description":"An optional note for the corresponding stock entry","type":"string"},"amount":{"description":"The amount to add - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"price":{"description":"The price per stock quantity unit in configured currency","type":"number"},"shopping_location_id":{"description":"If omitted, no store will be affected","type":"integer"},"stock_label_type":{"description":"`1` = No label, `2` = Single label, `3` = Label per unit","type":"integer"},"best_before_date":{"description":"The due date of the product to add, when omitted, the current date is used","format":"date","type":"string"},"transaction_type":{"enum":["purchase","consume","inventory-correction","product-opened"],"format":"enum","type":"string"},"location_id":{"description":"If omitted, the default location of the product is used","type":"integer"}},"type":"object"}},"required":["productId","body"],"type":"object"}},{"description":"/stock/products/{productId}/consume Removes the given amount of the given product from stock","name":"post_stock_products_productId_consume","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"body":{"example":{"amount":1,"transaction_type":"consume","spoiled":false},"properties":{"amount":{"description":"The amount to remove - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"recipe_id":{"description":"A valid recipe id for which this product was used (for statistical purposes only)","type":"integer"},"stock_entry_id":{"description":"A specific stock entry id to consume, if used, the amount has to be 1","type":"string"},"transaction_type":{"enum":["purchase","consume","inventory-correction","product-opened"],"format":"enum","type":"string"},"spoiled":{"description":"True when the given product was spoiled, defaults to false","type":"boolean"},"location_id":{"description":"A valid location id (if supplied, only stock at the given location is considered, if ommitted, stock of any location is considered)","type":"integer"},"allow_subproduct_substitution":{"description":"`true` when any in stock sub product should be used when the given product is a parent product and currently not in stock","type":"boolean"},"exact_amount":{"description":"For tare weight handling enabled products, `true` when the given is the absolute amount to be consumed, not the amount including the container weight","type":"boolean"}},"type":"object"}},"required":["productId","body"],"type":"object"}},{"description":"/stock/products/{productId}/transfer Transfers the given amount of the given product from one location to another (this is currently not supported for tare weight handling enabled products)","name":"post_stock_products_productId_transfer","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"body":{"example":{"amount":1,"location_id_from":1,"location_id_to":2},"properties":{"amount":{"description":"The amount to transfer - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"location_id_to":{"description":"A valid location id, the location to where the product should be transfered","type":"integer"},"location_id_from":{"description":"A valid location id, the location from where the product should be transfered","type":"integer"},"stock_entry_id":{"description":"A specific stock entry id to transfer, if used, the amount has to be 1","type":"string"}},"type":"object"}},"required":["productId","body"],"type":"object"}},{"description":"/stock/products/{productId}/inventory Inventories the given product (adds/removes based on the given new amount)","name":"post_stock_products_productId_inventory","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"body":{"example":"","properties":{"note":{"description":"An optional note for the corresponding stock entry (only applies to added products)","type":"string"},"new_amount":{"description":"The new current amount for the given product - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"price":{"description":"If omitted, the last price of the product is used (only applies to added products)","type":"number"},"shopping_location_id":{"description":"If omitted, no store will be affected","type":"integer"},"stock_label_type":{"description":"`1` = No label, `2` = Single label, `3` = Label per unit (only applies to added products)","type":"integer"},"best_before_date":{"description":"The due date which applies to added products","format":"date","type":"string"},"location_id":{"description":"If omitted, the default location of the product is used (only applies to added products)","type":"integer"}},"type":"object"}},"required":["productId","body"],"type":"object"}},{"description":"/stock/products/{productId}/open Marks the given amount of the given product as opened","name":"post_stock_products_productId_open","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"},"body":{"example":{"amount":1},"properties":{"amount":{"description":"The amount to mark as opened","type":"number"},"stock_entry_id":{"description":"A specific stock entry id to open, if used, the amount has to be 1","type":"string"},"allow_subproduct_substitution":{"description":"`true` when any in stock sub product should be used when the given product is a parent product and currently not in stock","type":"boolean"}},"type":"object"}},"required":["productId","body"],"type":"object"}},{"description":"/stock/products/{productId}/printlabel Prints the Grocycode label of the given product on the configured label printer","name":"get_stock_products_productId_printlabel","parameters":{"properties":{"productId":{"description":"A valid product id","type":"integer"}},"required":["productId"],"type":"object"}},{"description":"/stock/products/{productIdToKeep}/merge/{productIdToRemove} Merges two products into one","name":"post_stock_products_productIdToKeep_merge_productIdToRemove","parameters":{"properties":{"productIdToKeep":{"description":"A valid product id of the product to keep","type":"integer"},"productIdToRemove":{"description":"A valid product id of the product to remove","type":"integer"}},"required":["productIdToKeep","productIdToRemove"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode} Returns details of the given product by its barcode","name":"get_stock_products_by_barcode_barcode","parameters":{"properties":{"barcode":{"description":"Barcode","type":"string"}},"required":["barcode"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode}/add Adds the given amount of the by its barcode given product to stock","name":"post_stock_products_by_barcode_barcode_add","parameters":{"properties":{"body":{"example":{"amount":1,"best_before_date":"2019-01-19","transaction_type":"purchase","price":1.99},"properties":{"amount":{"description":"The amount to add - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"price":{"description":"The price per stock quantity unit in configured currency","type":"number"},"best_before_date":{"description":"The due date of the product to add, when omitted, the current date is used","format":"date","type":"string"},"transaction_type":{"enum":["purchase","consume","inventory-correction","product-opened"],"format":"enum","type":"string"},"location_id":{"description":"If omitted, the default location of the product is used","type":"integer"}},"type":"object"},"barcode":{"description":"Barcode","type":"string"}},"required":["barcode","body"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode}/consume Removes the given amount of the by its barcode given product from stock","name":"post_stock_products_by_barcode_barcode_consume","parameters":{"properties":{"body":{"example":{"amount":1,"transaction_type":"consume","spoiled":false},"properties":{"amount":{"description":"The amount to remove - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"recipe_id":{"description":"A valid recipe id for which this product was used (for statistical purposes only)","type":"integer"},"stock_entry_id":{"description":"A specific stock entry id to consume, if used, the amount has to be 1","type":"string"},"transaction_type":{"enum":["purchase","consume","inventory-correction","product-opened"],"format":"enum","type":"string"},"spoiled":{"description":"True when the given product was spoiled, defaults to false","type":"boolean"},"location_id":{"description":"A valid location id (if supplied, only stock at the given location is considered, if ommitted, stock of any location is considered)","type":"integer"},"allow_subproduct_substitution":{"description":"`rue` when any in stock sub product should be used when the given product is a parent product and currently not in stock","type":"boolean"},"exact_amount":{"description":"For tare weight handling enabled products, `true` when the given is the absolute amount to be consumed, not the amount including the container weight","type":"boolean"}},"type":"object"},"barcode":{"description":"Barcode","type":"string"}},"required":["barcode","body"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode}/transfer Transfers the given amount of the by its barcode given product from one location to another (this is currently not supported for tare weight handling enabled products)","name":"post_stock_products_by_barcode_barcode_transfer","parameters":{"properties":{"body":{"example":{"amount":1,"location_id_from":1,"location_id_to":2},"properties":{"amount":{"description":"The amount to transfer - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"location_id_to":{"description":"A valid location id, the location to where the product should be transfered","type":"integer"},"location_id_from":{"description":"A valid location id, the location from where the product should be transfered","type":"integer"},"stock_entry_id":{"description":"A specific stock entry id to transfer, if used, the amount has to be 1","type":"string"}},"type":"object"},"barcode":{"description":"Barcode","type":"string"}},"required":["barcode","body"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode}/inventory Inventories the by its barcode given product (adds/removes based on the given new amount)","name":"post_stock_products_by_barcode_barcode_inventory","parameters":{"properties":{"body":{"example":"","properties":{"new_amount":{"description":"The new current amount for the given product - please note that when tare weight handling for the product is enabled, this needs to be the amount including the container weight (gross), the amount to be posted will be automatically calculated based on what is in stock and the defined tare weight","type":"number"},"price":{"description":"If omitted, the last price of the product is used (only applies to added products)","type":"number"},"best_before_date":{"description":"The due date which applies to added products","format":"date","type":"string"},"location_id":{"description":"If omitted, the default location of the product is used (only applies to added products)","type":"integer"}},"type":"object"},"barcode":{"description":"Barcode","type":"string"}},"required":["barcode","body"],"type":"object"}},{"description":"/stock/products/by-barcode/{barcode}/open Marks the given amount of the by its barcode given product as opened","name":"post_stock_products_by_barcode_barcode_open","parameters":{"properties":{"body":{"example":{"amount":1},"properties":{"amount":{"description":"The amount to mark as opened","type":"number"},"stock_entry_id":{"description":"A specific stock entry id to open, if used, the amount has to be 1","type":"string"},"allow_subproduct_substitution":{"description":"`rue` when any in stock sub product should be used when the given product is a parent product and currently not in stock","type":"boolean"}},"type":"object"},"barcode":{"description":"Barcode","type":"string"}},"required":["barcode","body"],"type":"object"}},{"description":"/stock/locations/{locationId}/entries Returns all stock entries of the given location","name":"get_stock_locations_locationId_entries","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"locationId":{"description":"A valid location id","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":["locationId"],"type":"object"}},{"description":"/stock/shoppinglist/add-missing-products Adds currently missing products (below defined min. stock amount) to the given shopping list","name":"post_stock_shoppinglist_add_missing_products","parameters":{"properties":{"body":{"example":{"list_id":2},"properties":{"list_id":{"description":"The shopping list to use, when omitted, the default shopping list (with id 1) is used","type":"integer"}},"type":"object"}},"required":[],"type":"object"}},{"description":"/stock/shoppinglist/add-overdue-products Adds overdue products to the given shopping list","name":"post_stock_shoppinglist_add_overdue_products","parameters":{"properties":{"body":{"example":{"list_id":2},"properties":{"list_id":{"description":"The shopping list to use, when omitted, the default shopping list (with id 1) is used","type":"integer"}},"type":"object"}},"required":[],"type":"object"}},{"description":"/stock/shoppinglist/add-expired-products Adds expired products to the given shopping list","name":"post_stock_shoppinglist_add_expired_products","parameters":{"properties":{"body":{"example":{"list_id":2},"properties":{"list_id":{"description":"The shopping list to use, when omitted, the default shopping list (with id 1) is used","type":"integer"}},"type":"object"}},"required":[],"type":"object"}},{"description":"/stock/shoppinglist/clear Removes all items from the given shopping list","name":"post_stock_shoppinglist_clear","parameters":{"properties":{"body":{"example":{"list_id":2,"done_only":false},"properties":{"list_id":{"description":"The shopping list id to clear, when omitted, the default shopping list (with id 1) is used","type":"integer"},"done_only":{"description":"When `true`, only done items will be removed (defaults to `false` when ommited)","type":"boolean"}},"type":"object"}},"required":[],"type":"object"}},{"description":"/stock/shoppinglist/add-product Adds the given amount of the given product to the given shopping list. If the product is already on the shopping list, the given amount will increase the amount of the already existing item, otherwise a new item will be added","name":"post_stock_shoppinglist_add_product","parameters":{"properties":{"body":{"example":{"product_id":3,"list_id":2,"product_amount":5,"note":"This is the note of the shopping list item..."},"properties":{"note":{"description":"The note of the shopping list item","type":"string"},"list_id":{"description":"A valid shopping list id, when omitted, the default shopping list (with id 1) is used","type":"integer"},"product_id":{"description":"A valid product id of the product to be added","type":"integer"},"qu_id":{"description":"A valid quantity unit id (used only for display; the amount needs to be related to the products stock QU), when omitted, the products stock QU is used","type":"integer"},"product_amount":{"description":"The amount (related to the products stock QU) to add, when omitted, the default amount of 1 is used","type":"number"}},"type":"object"}},"required":["body"],"type":"object"}},{"description":"/stock/shoppinglist/remove-product Removes the given amount of the given product from the given shopping list, if it is on it. If the resulting amount is <= 0, the item will be completely removed from the given list, otherwise the given amount will reduce the amount of the existing item","name":"post_stock_shoppinglist_remove_product","parameters":{"properties":{"body":{"example":{"product_id":3,"list_id":2,"product_amount":5},"properties":{"list_id":{"description":"A valid shopping list id, when omitted, the default shopping list (with id 1) is used","type":"integer"},"product_id":{"description":"A valid product id of the item on the shopping list","type":"integer"},"product_amount":{"description":"The amount of product units to remove, when omitted, the default amount of 1 is used","type":"number"}},"type":"object"}},"required":["body"],"type":"object"}},{"description":"/stock/bookings/{bookingId} Returns the given stock booking","name":"get_stock_bookings_bookingId","parameters":{"properties":{"bookingId":{"description":"A valid stock booking id","type":"integer"}},"required":["bookingId"],"type":"object"}},{"description":"/stock/bookings/{bookingId}/undo Undoes a booking","name":"post_stock_bookings_bookingId_undo","parameters":{"properties":{"bookingId":{"description":"A valid stock booking id","type":"integer"}},"required":["bookingId"],"type":"object"}},{"description":"/stock/transactions/{transactionId} Returns all stock bookings of the given transaction id","name":"get_stock_transactions_transactionId","parameters":{"properties":{"transactionId":{"description":"A valid stock transaction id","type":"string"}},"required":["transactionId"],"type":"object"}},{"description":"/stock/transactions/{transactionId}/undo Undoes a transaction","name":"post_stock_transactions_transactionId_undo","parameters":{"properties":{"transactionId":{"description":"A valid stock transaction id","type":"string"}},"required":["transactionId"],"type":"object"}},{"description":"/stock/barcodes/external-lookup/{barcode} Executes an external barcode lookoup via the configured plugin with the given barcode","name":"get_stock_barcodes_external_lookup_barcode","parameters":{"properties":{"add":{"default":"false","description":"When true, the product is added to the database on a successful lookup and the new product id is in included in the response","type":"boolean"},"barcode":{"description":"The barcode to lookup up","type":"string"}},"required":["barcode"],"type":"object"}},{"description":"/recipes/{recipeId}/add-not-fulfilled-products-to-shoppinglist Adds all missing products for the given recipe to the shopping list","name":"post_recipes_recipeId_add_not_fulfilled_products_to_shoppinglist","parameters":{"properties":{"body":{"example":"","properties":{"excludedProductIds":{"description":"An optional array of product ids to exclude them from being put on the shopping list","items":{"type":"integer"},"type":"array"}},"type":"object"},"recipeId":{"description":"A valid recipe id","type":"string"}},"required":["recipeId"],"type":"object"}},{"description":"/recipes/{recipeId}/fulfillment Get stock fulfillment information for the given recipe","name":"get_recipes_recipeId_fulfillment","parameters":{"properties":{"recipeId":{"description":"A valid recipe id","type":"string"}},"required":["recipeId"],"type":"object"}},{"description":"/recipes/{recipeId}/consume Consumes all in stock ingredients of the given recipe (for ingredients that are only partially in stock, the in stock amount will be consumed)","name":"post_recipes_recipeId_consume","parameters":{"properties":{"recipeId":{"description":"A valid recipe id","type":"string"}},"required":["recipeId"],"type":"object"}},{"description":"/recipes/fulfillment Get stock fulfillment information for all recipe","name":"get_recipes_fulfillment","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":[],"type":"object"}},{"description":"/recipes/{recipeId}/copy Copies a recipe","name":"post_recipes_recipeId_copy","parameters":{"properties":{"recipeId":{"description":"A valid recipe id of the recipe to copy","type":"integer"}},"required":["recipeId"],"type":"object"}},{"description":"/recipes/{recipeId}/printlabel Prints the Grocycode label of the given recipe on the configured label printer","name":"get_recipes_recipeId_printlabel","parameters":{"properties":{"recipeId":{"description":"A valid recipe id","type":"integer"}},"required":["recipeId"],"type":"object"}},{"description":"/chores Returns all chores incl. the next estimated execution time per chore","name":"get_chores","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":[],"type":"object"}},{"description":"/chores/{choreId} Returns details of the given chore","name":"get_chores_choreId","parameters":{"properties":{"choreId":{"description":"A valid chore id","type":"integer"}},"required":["choreId"],"type":"object"}},{"description":"/chores/{choreId}/execute Tracks an execution of the given chore","name":"post_chores_choreId_execute","parameters":{"properties":{"choreId":{"description":"A valid chore id","type":"integer"},"body":{"example":"","properties":{"done_by":{"description":"A valid user id of who executed this chore, when omitted, the currently authenticated user will be used","type":"integer"},"tracked_time":{"description":"The time of when the chore was executed, when omitted, the current time is used","format":"date-time","type":"string"},"skipped":{"default":"false","description":"`true` when the execution should be tracked as skipped, defaults to `false` when omitted","type":"boolean"}},"type":"object"}},"required":["choreId","body"],"type":"object"}},{"description":"/chores/executions/{executionId}/undo Undoes a chore execution","name":"post_chores_executions_executionId_undo","parameters":{"properties":{"executionId":{"description":"A valid chore execution id","type":"integer"}},"required":["executionId"],"type":"object"}},{"description":"/chores/executions/calculate-next-assignments (Re)calculates all next user assignments of all chores","name":"post_chores_executions_calculate_next_assignments","parameters":{"properties":{"body":{"example":{"chore_id":1},"properties":{"chore_id":{"description":"The chore id of the chore which next user assignment should be (re)calculated, when omitted, the next user assignments of all chores will (re)caluclated","type":"integer"}},"type":"object"}},"required":[],"type":"object"}},{"description":"/chores/{choreId}/printlabel Prints the Grocycode label of the given chore on the configured label printer","name":"get_chores_choreId_printlabel","parameters":{"properties":{"choreId":{"description":"A valid chore id","type":"integer"}},"required":["choreId"],"type":"object"}},{"description":"/chores/{choreIdToKeep}/merge/{choreIdToRemove} Merges two chores into one","name":"post_chores_choreIdToKeep_merge_choreIdToRemove","parameters":{"properties":{"choreIdToKeep":{"description":"A valid chore id of the chore to keep","type":"integer"},"choreIdToRemove":{"description":"A valid chore id of the chore to remove","type":"integer"}},"required":["choreIdToKeep","choreIdToRemove"],"type":"object"}},{"description":"/batteries Returns all batteries incl. the next estimated charge time per battery","name":"get_batteries","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":[],"type":"object"}},{"description":"/batteries/{batteryId} Returns details of the given battery","name":"get_batteries_batteryId","parameters":{"properties":{"batteryId":{"description":"A valid battery id","type":"integer"}},"required":["batteryId"],"type":"object"}},{"description":"/batteries/{batteryId}/charge Tracks a charge cycle of the given battery","name":"post_batteries_batteryId_charge","parameters":{"properties":{"batteryId":{"description":"A valid battery id","type":"integer"},"body":{"example":"","properties":{"tracked_time":{"description":"The time of when the battery was charged, when omitted, the current time is used","format":"date-time","type":"string"}},"type":"object"}},"required":["batteryId","body"],"type":"object"}},{"description":"/batteries/charge-cycles/{chargeCycleId}/undo Undoes a battery charge cycle","name":"post_batteries_charge_cycles_chargeCycleId_undo","parameters":{"properties":{"chargeCycleId":{"description":"A valid charge cycle id","type":"integer"}},"required":["chargeCycleId"],"type":"object"}},{"description":"/batteries/{batteryId}/printlabel Prints the Grocycode label of the given battery on the configured label printer","name":"get_batteries_batteryId_printlabel","parameters":{"properties":{"batteryId":{"description":"A valid battery id","type":"integer"}},"required":["batteryId"],"type":"object"}},{"description":"/tasks Returns all tasks which are not done yet","name":"get_tasks","parameters":{"properties":{"offset":{"description":"The number of objects to skip","type":"integer"},"query[]":{"description":"An array of filter conditions, each of them is a string in the form of `<field><condition><value>` where<br>`<field>` is a valid field name<br>`<condition>` is a comparison operator, one of<br>&nbsp;&nbsp;`=` equal<br>&nbsp;&nbsp;`!=` not equal<br>&nbsp;&nbsp;`~` LIKE<br>&nbsp;&nbsp;`!~` not LIKE<br>&nbsp;&nbsp;`<` less<br>&nbsp;&nbsp;`>` greater<br>&nbsp;&nbsp;`<=` less or equal<br>&nbsp;&nbsp;`>=` greater or equal<br>&nbsp;&nbsp;`§` regular expression<br>`<value>` is the value to search for","items":{"type":"string"},"type":"array"},"limit":{"description":"The maximum number of objects to return","type":"integer"},"order":{"description":"A valid field name by which the response should be ordered, use the separator `:` to specify the sort order (`asc` or `desc`, defaults to `asc` when omitted)","type":"string"}},"required":[],"type":"object"}},{"description":"/tasks/{taskId}/complete Marks the given task as completed","name":"post_tasks_taskId_complete","parameters":{"properties":{"body":{"example":"","properties":{"done_time":{"description":"The time of when the task was completed, when omitted, the current time is used","format":"date-time","type":"string"}},"type":"object"},"taskId":{"description":"A valid task id","type":"integer"}},"required":["taskId","body"],"type":"object"}},{"description":"/tasks/{taskId}/undo Marks the given task as not completed","name":"post_tasks_taskId_undo","parameters":{"properties":{"taskId":{"description":"A valid task id","type":"integer"}},"required":["taskId"],"type":"object"}},{"description":"/calendar/ical Returns the calendar in iCal format","name":"get_calendar_ical","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/calendar/ical/sharing-link Returns a (public) sharing link for the calendar in iCal format","name":"get_calendar_ical_sharing_link","parameters":{"properties":{},"required":[],"type":"object"}},{"description":"/print/shoppinglist/thermal Prints the shoppinglist with a thermal printer","name":"get_print_shoppinglist_thermal","parameters":{"properties":{"printHeader":{"default":"true","description":"Prints Grocy logo if true","type":"boolean"},"list":{"default":"1","description":"Shopping list id","type":"integer"}},"required":[],"type":"object"}}]},{"functionDeclarations":[{"description":"Invokes an online Google Search with a query","name":"google_search","parameters":{"properties":{"query":{"description":"The search query","type":"STRING"}},"required":["query"],"type":"OBJECT"}}]}]}